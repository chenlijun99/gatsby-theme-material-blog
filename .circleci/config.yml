version: 2

executors::
  node-executor:
   docker:
     - image: circleci/node
   steps:
     - checkout
     - attach_workspace:
        at: ./
     - run: DISABLE_WEBPACK_BUNDLE_ANALYSER=1 yarn run build

netlify-deploy: &netlify-deploy
   executor: node-executor
   environment:
    NETLIFY_SITE_ID: NETLIFY_SITE_ID
    NETLIFY_ACCESS_TOKEN: NETLIFY_ACCESS_TOKEN

jobs:
 install:
   executor: node-executor
   steps:
     - checkout
     - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
     - run:
         name: Install Dependencies
         command: yarn install --frozen-lockfile
     - save_cache:
         name: Save Yarn Package Cache
         key: yarn-packages-{{ checksum "yarn.lock" }}
         paths:
           - ~/.cache/yarn
     - persist_to_workspace:
        root: ./
        paths:
          - node_modules
 type-check:
   executor: node-executor
   steps:
     - checkout
     - attach_workspace:
        at: ./
     - run: yarn run type-check

 lint:
   executor: node-executor
   steps:
     - checkout
     - attach_workspace:
        at: ./
     - run: yarn run lint

 build:
   executor: node-executor
   steps:
     - checkout
     - attach_workspace:
        at: ./
     - run:
        name: Gatsby build
        command: DISABLE_WEBPACK_BUNDLE_ANALYSER=1 yarn run build
     - persist_to_workspace:
        root: ./
        paths:
          - example/public/
 deploy-pr-preview:
   <<: *netlify-deploy
   steps:
     - checkout
     - attach_workspace:
        at: ./
     - run:
        name: Preview deploy
        command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --dir=example/build
 deploy-master:
   <<: *netlify-deploy
   steps:
     - checkout
     - attach_workspace:
        at: ./
     - run:
        name: Production deploy
        command: ./node_modules/.bin/netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_ACCESS_TOKEN --prod --dir=example/build

workflows:
  version: 2
  build_and_test: # name of your workflow
    jobs:
      - install
      - type-check:
          requires:
            - install
      - lint:
          requires:
            - install
      - build:
          requires:
            - lint
            - type-check
      - deploy-pr-preview:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - deploy-master:
          requires:
            - build
          filters:
            branches:
             only:
                - master
